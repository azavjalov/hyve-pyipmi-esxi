#!/usr/bin/env python3
import sys
from os.path import dirname, join

mylib = join(dirname(__file__), './src')
if not mylib in sys.path:
    sys.path.insert(0, mylib)

from pyipmi.util import PyTest
from pyipmi.util.config import PyOpts

def str2int(s):
    if s[:2] == '0x' or s[:2] == '0X':
        ret = int(s, base=16)
    else:
        ret = int(s)

    return ret

if __name__ == '__main__':
    pyopts = PyOpts()
    pyopts.add_options()
    pyopts.add_more_options()
    options, args = pyopts.parser.parse_args()

    if len(args) < 2:
        print('Missing NetFn or CMD.  Stopped.')
        sys.exit(1)

    req = []        
    for i in args:  # Drop the program name
        try:
            req.append(str2int(i))
        except:
            print('Invalid input argument: {0}.'.format(i))
            sys.exit(1)

    try:
        test = PyTest(options)
        lun = str2int(options.lun) if options.lun else 0
        dest = str2int(options.dest_chnl) if options.dest_chnl else None
        target = str2int(options.target_addr) if options.target_addr else None

        if dest and target:
            # issue bridging command
            rsp = test.intf.issue_bridging_cmd(dest, target, req, lun)
        else:
            # issue the IPMI command
            rsp = test.intf.issue_raw_cmd(req, lun)  
        
        # print response
        test.print_rsp(rsp)                      

    except BaseException as e:
        print(e)
        sys.exit(1)
        